{"version":3,"sources":["../../src/mw-chart.js","../../src/modules/directive.js","../../src/modules/factory.js"],"names":["angular","module","directive","$chart","restrict","scope","template","replace","link","el","attrs","ctx","getContext","chart","destroy","options","get_chart","data_update","update","$watch","value_new","factory","$log","Chart","undefined","random_number","max","Math","floor","random","create_random_color","e","error"],"mappings":";;;;;;;AAAA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;ACA3B;;AACAA,QAAQC,MAAR,CAAe,UAAf,EAA2BC,SAA3B,CAAqC,SAArC,EAAgD,CAAC,QAAD,EAAW,UAASC,MAAT,EAAgB;AAC1E,QAAO;AACNC,YAAU,GADJ;AAENC,SAAU;AACT,cAAW;AADF,GAFJ;AAKNC,YAAU,mBALJ;AAMNC,WAAU,IANJ;AAONC,QAAU,cAASH,KAAT,EAAgBI,EAAhB,EAAoBC,KAApB,EAA0B;AACnC,OAAIC,MAAMF,GAAG,CAAH,EAAMG,UAAN,CAAiB,IAAjB,CAAV;AACA,OAAGP,MAAMQ,KAAT,EAAe;AACdR,UAAMQ,KAAN,CAAYC,OAAZ;AACA;AACD;AACAT,SAAMQ,KAAN,GAAc,IAAIV,MAAJ,CAAWQ,GAAX,EAAgBN,MAAMU,OAAtB,CAAd;;AAEA;AACAV,SAAMU,OAAN,CAAcC,SAAd,GAA0B,YAAU;AACnC,WAAOX,MAAMQ,KAAb;AACA,IAFD;;AAIA;AACAR,SAAMU,OAAN,CAAcE,WAAd,GAA4B,YAAU;AACrCZ,UAAMQ,KAAN,CAAYK,MAAZ;AACA,IAFD;;AAIA;AACAb,SAAMc,MAAN,CAAa,CAAC,iBAAD,EAAoB,iBAApB,CAAb,EAAqD,UAASC,SAAT,EAAmB;AACvEf,UAAMQ,KAAN,CAAYK,MAAZ;AACA,IAFD,EAEG,IAFH;;AAIAb,SAAMc,MAAN,CAAa,cAAb,EAA6B,UAASC,SAAT,EAAmB;AAC/Cf,UAAMQ,KAAN,CAAYK,MAAZ;AACA,IAFD;AAGA;AAjCK,EAAP;AAmCA,CApC+C,CAAhD;ACDA;;AACAlB,QAAQC,MAAR,CAAe,UAAf,EAA2BoB,OAA3B,CAAmC,QAAnC,EAA6C,CAAC,MAAD,EAAS,UAASC,IAAT,EAAc;AACnE,KAAG;AACF,MAAGC,UAAUC,SAAb,EAAuB;AACtB;AACA,OAAIC,gBAAgB,SAAhBA,aAAgB,CAASC,GAAT,EAAa;AAChC,WAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAcH,GAAzB,CAAP;AACA,IAFD;;AAIA;AACAH,SAAMO,mBAAN,GAA4B,YAAU;AACrC,WAAO,UAAQL,cAAc,GAAd,CAAR,GAA2B,GAA3B,GAA+BA,cAAc,GAAd,CAA/B,GAAkD,GAAlD,GAAsDA,cAAc,GAAd,CAAtD,GAAyE,QAAhF;AACA,IAFD;;AAIA,UAAOF,KAAP;AACA;AACD,EAdD,CAcC,OAAMQ,CAAN,EAAQ;AACRT,OAAKU,KAAL,CAAW,6BAAX;AACA,SAAO,EAAP;AACA;AACD,CAnB4C,CAA7C","file":"mw-chart.js","sourcesContent":["angular.module('mw-chart', []);","'use strict';\nangular.module('mw-chart').directive('mwChart', ['$chart', function($chart){\n\treturn {\n\t\trestrict: 'E',\n\t\tscope:    {\n\t\t\t'options': '='\n\t\t},\n\t\ttemplate: '<canvas></canvas>',\n\t\treplace:  true,\n\t\tlink:     function(scope, el, attrs){\n\t\t\tlet ctx = el[0].getContext('2d');\n\t\t\tif(scope.chart){\n\t\t\t\tscope.chart.destroy();\n\t\t\t}\n\t\t\t//set chart\n\t\t\tscope.chart = new $chart(ctx, scope.options);\n\n\t\t\t//get the chart\n\t\t\tscope.options.get_chart = function(){\n\t\t\t\treturn scope.chart;\n\t\t\t};\n\n\t\t\t//update the chart\n\t\t\tscope.options.data_update = function(){\n\t\t\t\tscope.chart.update();\n\t\t\t};\n\n\t\t\t//watch for option changes\n\t\t\tscope.$watch(['options.options', 'options.plugins'], function(value_new){\n\t\t\t\tscope.chart.update();\n\t\t\t}, true);\n\n\t\t\tscope.$watch('options.type', function(value_new){\n\t\t\t\tscope.chart.update();\n\t\t\t});\n\t\t}\n\t};\n}]);","'use strict';\nangular.module('mw-chart').factory('$chart', ['$log', function($log){\n\ttry{\n\t\tif(Chart !== undefined){\n\t\t\t//generate random number\n\t\t\tlet random_number = function(max){\n\t\t\t\treturn Math.floor(Math.random()*max);\n\t\t\t};\n\n\t\t\t//generate random color\n\t\t\tChart.create_random_color = function(){\n\t\t\t\treturn 'rgba('+random_number(255)+','+random_number(255)+','+random_number(255)+', 0.5)';\n\t\t\t};\n\n\t\t\treturn Chart;\n\t\t}\n\t}catch(e){\n\t\t$log.error('mw-chart requires Chart.js.');\n\t\treturn {};\n\t}\n}]);"]}